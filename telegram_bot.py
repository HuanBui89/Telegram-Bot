import argparse
import os
from datetime import datetime
import pytz
import openai
from telegram import Bot
from PIL import Image
import requests
import io

# L·∫•y t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
GROUP_CHAT_ID = os.getenv("GROUP_CHAT_ID")

# C·∫•u h√¨nh bot v√† OpenAI
bot = Bot(token=TELEGRAM_TOKEN)
client = openai.OpenAI(api_key=OPENAI_API_KEY)

# C·∫£nh n·ªÅn thay ƒë·ªïi theo ng√†y
daily_scenes = {
    "Monday": "sunrise over a calm lake with morning mist",
    "Tuesday": "golden rice fields in early sunlight",
    "Wednesday": "sunrise over peaceful ocean waves",
    "Thursday": "lush green hills and valley at dawn",
    "Friday": "mountains with glowing fog and flowers",
    "Saturday": "sunlight on a tropical beach with palm trees",
    "Sunday": "river flowing through peaceful forest in sunrise",
}

# L·ªùi ch√∫c theo ng√†y
weekday_boost = {
    "Monday": "üìÖ ƒê·∫ßu tu·∫ßn r·ªìi, bung l·ª•a m·ªü b√°t thi·ªát m·∫°nh nha m·∫•y ch·∫ø! üí™",
    "Tuesday": "üìÖ Th·ª© ba kh√¥ng drama ‚Äì ch·ªâ c√≥ ƒë∆°n ƒë·ªï √†o √†o th√¥i n√®! üìà",
    "Wednesday": "üìÖ Gi·ªØa tu·∫ßn gi·ªØ phong ƒë·ªô, ƒë∆°n v·ªÅ l√† c√≥ ƒë·ªông l·ª±c li·ªÅn! üòé",
    "Thursday": "üìÖ Th·ª© nƒÉm tƒÉng t·ªëc, ch·∫°y KPI m∆∞·ª£t nh∆∞ n∆∞·ªõc m·∫Øm Nam Ng∆∞! üöÄ",
    "Friday": "üìÖ Cu·ªëi tu·∫ßn nh∆∞ng kh√¥ng x·∫£ h∆°i ‚Äì ch·ªët ƒë∆°n xong r·ªìi h√£y ch∆°i! üï∫",
    "Saturday": "üìÖ Th·ª© b·∫£y m√°u chi·∫øn ‚Äì ai ch·ªët ƒë∆∞·ª£c h√¥m nay l√† ƒë·ªânh c·ªßa ch√≥p! üî•",
    "Sunday": "üìÖ Ch·ªß nh·∫≠t chill nh·∫π, nh∆∞ng ai ch·ªët ƒë∆°n th√¨ v·∫´n l√† ng∆∞·ªùi chi·∫øn th·∫Øng! üèÜ",
}

def get_text(prompt: str, max_tokens=150) -> str:
    resp = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[{"role": "user", "content": prompt}],
        max_tokens=max_tokens,
        temperature=0.7,
    )
    return resp.choices[0].message.content.strip()

def create_image(prompt: str) -> str:
    """T·∫°o ·∫£nh t·ª´ DALL¬∑E v√† l∆∞u v√†o local, tr·∫£ v·ªÅ ƒë∆∞·ªùng d·∫´n file"""
    print("üñºÔ∏è T·∫°o ·∫£nh v·ªõi prompt:", prompt)
    response = client.images.generate(
        model="dall-e-3",
        prompt=prompt,
        size="1024x1024",
        quality="standard",
        n=1
    )
    image_url = response.data[0].url
    image_bytes = requests.get(image_url).content
    image = Image.open(io.BytesIO(image_bytes)).convert("RGB")

    image_path = "/tmp/morning_motivation_clean.png"
    image.save(image_path)
    return image_path

def send_morning_message():
    """T·∫°o ·∫£nh, l·∫•y quote, v√† g·ª≠i l√™n Telegram v·ªõi ·∫£nh s·∫°ch (kh√¥ng ch√®n ch·ªØ)"""
    vietnam_tz = pytz.timezone("Asia/Ho_Chi_Minh")
    now = datetime.now(vietnam_tz)
    today = now.strftime("%A")
    print("üìÖ H√¥m nay l√†:", today)

    try:
        # 1. L·∫•y quote + d·ªãch
        quote_en = get_text("Tr√≠ch d·∫´n m·ªôt c√¢u ch√¢m ng√¥n n·ªïi ti·∫øng t·ª´ danh nh√¢n v√† ghi r√µ ng∆∞·ªùi n√≥i.")
        quote_vi = get_text(f"D·ªãch sang ti·∫øng Vi·ªát d·ªÖ hi·ªÉu, truy·ªÅn c·∫£m h·ª©ng:\n{quote_en}")
        quote = f"‚Äú{quote_en}‚Äù\n_({quote_vi})_"

        # 2. T·∫°o ·∫£nh n·ªÅn
        scene_prompt = f"A beautiful {daily_scenes.get(today, 'sunrise over mountains')}, ultra-realistic, no text"
        image_path = create_image(scene_prompt)

        # 3. So·∫°n caption
        greeting = "Ch√†o bu·ªïi s√°ng team sales! ‚òÄÔ∏è"
        daily_line = weekday_boost.get(today, "")
        caption = f"{greeting}\n{daily_line}\n\nüí° **Ch√¢m ng√¥n h√¥m nay:**\n{quote}"

        # 4. G·ª≠i Telegram
        with open(image_path, "rb") as img:
            bot.send_photo(
                chat_id=GROUP_CHAT_ID,
                photo=img,
                caption=caption,
                parse_mode="Markdown"
            )

        print("‚úÖ ƒê√£ g·ª≠i ·∫£nh v√† n·ªôi dung th√†nh c√¥ng!")

    except Exception as e:
        print("‚ùå G·ª≠i th·∫•t b·∫°i:", str(e))
        print("ü™µ Chi ti·∫øt l·ªói:", repr(e))

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--once', action='store_true', help='G·ª≠i tin ngay l·∫≠p t·ª©c r·ªìi tho√°t')
    args = parser.parse_args()

    if args.once:
        send_morning_message()

if __name__ == "__main__":
    main()
